.\" For license: see LICENSE file at top-level
.TH oshrun 1 "" "OSSS"
.SH NAME
\fBoshrun\fP \- run an OpenSHMEM program
.SH SYNOPSIS
\fBoshrun | oshexec\fP
.RS 4
.br
[launcher pass-through arguments]
.br
[ -n N | -np N ]
.br
program [arguments...]
.RE
.SH DESCRIPTION
\fBoshrun\fP, a.k.a. \fBoshexec\fP, runs an OpenSHMEM program on the
given number of processing elements.
.SH OPTIONS
.IP "-n N | -np N" 4
Run the program on N processing elements (PEs or processors).
Overrides any PE count inherited from launch environment.
.LP
.SH ENVIRONMENT
OpenSHMEM environment variables are prefixed with "SHMEM_".
.LP
If set, boolean flags are enabled with a non-zero numeric value, or
"y", "yes", or "on"; disabled with zero numeric value, or "n", "no",
or "off".
.LP
Some older SHMEM implementations had variables prefixed with "SMA_":
these are still supported in OpenSHMEM, but are deprecated.  If both
are set for a given variable, the "SHMEM_" one will be used.
.LP
.\"
.RS 4
.\"
.LP
Required by specification
.RS 4
.IP "SHMEM_VERSION, SMA_VERSION (bool: default false)"
print library version at start-up
.IP "SHMEM_INFO, SMA_INFO (bool: default false)"
print information about supported environment variables
.IP "SHMEM_SYMMETRIC_SIZE, SMA_SYMMETRIC_SIZE (number: default @SHMEM_DEFAULT_HEAP_SIZE@)"
set the size of the symmetric heap.  Can use K,M,G,T units (2^10).
.IP "SHMEM_DEBUG, SMA_DEBUG (bool: default false)"
enable run debugging/sanity checking (if configured).
.RE
.LP
This implementation also has
.RS 4
.IP "SHMEM_LOGGING (bool: default false)"
enable message logging (if configured).
.IP "SHMEM_LOGGING_EVENTS (string: default none)"
A comma-separated list of events that select logging messages (if
logging enabled, v.i.): fatal, init, finalize, memory, heaps,
contexts, info, reductions, barriers, deprecate, locks, atomics; or
"all", which selects all of the above.
.RE
.RS 4
.IP "SHMEM_LOGGING_FILE (string: default none)"
file to receive logging information.
.RE
.RS 4
.IP "SHMEM_BARRIER_ALGO (string: default tree)"
Algorithm name to use for barriers: currently one of "linear", "tree",
"dissem" (dissemination).
.RE
.RS 4
.IP "SHMEM_BROADCAST_ALGO (string: default tree)"
Algorithm name to use for broadcasts: currently one of "linear",
"tree", "dissem", "binomial", "binomial2".
.RE
.RS 4
.IP "SHMEM_LAUNCHER (default: search)"
Name of program to use for underlying PMI-aware (currently PMIx-aware)
launcher.  Default behavior is to search for an MPI launcher.  Can
also be set by configure.
.RE
.\"
.RE
.\"
.SH EXAMPLES
The command
.LP
.RS 4
$ oshrun -np 4 ./sping.x -e 8192
.RE
.LP
runs the ping-pong code from
.RS 4
.LP
\f(CRhttps://github.com/openshmem-org/openshmem-examples\fP
.RE
.LP
on 4 processing elements, and passes the arguments "-e" and "8192"
through to the OpenSHMEM program.
.SH NOTES
.LP
The OpenSHMEM specification does not say anything normative about how
OpenSHMEM programs are compiled, linked and launched.  These wrapper
programs are supplied as part of the Reference Library for
convenience.
.SH SEE ALSO
osh_intro(1).
.SH OPENSHMEM
\f(CRhttp://www.openshmem.org/\fP
.br
\f(CRhttps://github.com/openshmem-org/openshmem-examples\fP
